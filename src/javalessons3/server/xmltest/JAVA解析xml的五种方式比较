JAVA解析xml的五种方式比较
　　　　 1)DOM解析
	DOM是html和xml的应用程序接口(API)，以层次结构（类似于树型）来组织节点和信息片段，映射XML文档的结构，允许获取
	和操作文档的任意部分，是W3C的官方标准
	【优点】
		①允许应用程序对数据和结构做出更改。
		②访问是双向的，可以在任何时候在树中上下导航，获取和操作任意部分的数据。
	【缺点】
		①通常需要加载整个XML文档来构造层次结构，消耗资源大。
	【解析详解】
		①构建Document对象：
			DocumentBuilderFactory dbf = DocumentBuilderFactory.newInstance();
			DocumentBuilder db = bdf.newDocumentBuilder();
			InputStream is = Thread.currentThread().getContextClassLoader().getResourceAsStream(xml文件);
			Document doc = bd.parse(is);
		②遍历DOM对象
			Document：	XML文档对象，由解析器获取
			NodeList：	节点数组
			Node：		节点(包括element、#text)
			Element：	元素，可用于获取属性参数
	(2)SAX(Simple API for XML)解析
	流模型中的"推"模型分析方式。通过事件驱动，每发现一个节点就引发一个事件，事件推给事件处理器，通过回调方法
	完成解析工作，解析XML文档的逻辑需要应用程序完成
	【优势】
		①不需要等待所有数据都被处理，分析就能立即开始。
		②只在读取数据时检查数据，不需要保存在内存中。
		③可以在某个条件得到满足时停止解析，不必解析整个文档。
		④效率和性能较高，能解析大于系统内存的文档。
	【缺点】
		①需要应用程序自己负责TAG的处理逻辑（例如维护父/子关系等），文档越复杂程序就越复杂。
		②单向导航，无法定位文档层次，很难同时访问同一文档的不同部分数据，不支持XPath。
	【原理】
		简单的说就是对文档进行顺序扫描，当扫描到文档(document)开始与结束、元素(element)开始与结束时通知事件
		处理函数(回调函数)，进行相应处理，直到文档结束
	【事件处理器类型】
		①访问XML DTD：DTDHandler
		②低级访问解析错误：ErrorHandler
		③访问文档内容：ContextHandler
	【DefaultHandler类】
		SAX事件处理程序的默认基类，实现了DTDHandler、ErrorHandler、ContextHandler和EntityResolver接口，通常
		做法是，继承该基类，重写需要的方法，如startDocument()
	【创建SAX解析器】
		SAXParserFactory saxf = SAXParserFactory.newInstance();
		SAXParser sax = saxf.newSAXParser();
	注：关于遍历
		①深度优先遍历(Depthi-First Traserval)
		②广度优先遍历(Width-First Traserval)
	(3)JDOM(Java-based Document Object Model)
	Java特定的文档对象模型。自身不包含解析器，使用SAX
	【优点】
		①使用具体类而不是接口，简化了DOM的API。
		②大量使用了Java集合类，方便了Java开发人员。
	【缺点】
		①没有较好的灵活性。
		②性能较差。
	(4)DOM4J(Document Object Model for Java)
	简单易用，采用Java集合框架，并完全支持DOM、SAX和JAXP
	【优点】
		①大量使用了Java集合类，方便Java开发人员，同时提供一些提高性能的替代方法。
		②支持XPath。
		③有很好的性能。
	【缺点】
		①大量使用了接口，API较为复杂。
	(5)StAX(Streaming API for XML)
	流模型中的拉模型分析方式。提供基于指针和基于迭代器两种方式的支持,JDK1.6新特性
	【和推式解析相比的优点】
		①在拉式解析中，事件是由解析应用产生的，因此拉式解析中向客户端提供的是解析规则，而不是解析器。
		②同推式解析相比，拉式解析的代码更简单，而且不用那么多库。
		③拉式解析客户端能够一次读取多个XML文件。
		④拉式解析允许你过滤XML文件和跳过解析事件。
	【简介】
		StAX API的实现是使用了Java Web服务开发（JWSDP）1.6，并结合了Sun Java流式XML分析器(SJSXP)-它位于
		javax.xml.stream包中。XMLStreamReader接口用于分析一个XML文档，而XMLStreamWriter接口用于生成一个
		XML文档。XMLEventReader负责使用一个对象事件迭代子分析XML事件-这与XMLStreamReader所使用的光标机制
		形成对照。
标签: java